class Solution:
    def searchInsert(self, nums: List[int], target: int) -> int:
        """
        Time Complexity: O(log n) - Binary search divides the input size in half at each step.
        Space Complexity: O(1) - No extra space is used beyond a few variables.
        """
        l, r = 0, len(nums) - 1

        while l <= r:
            m = (l + r) // 2
            if nums[m] == target:
                return m
            elif nums[m] > target:
                r = m - 1
            else:
                l = m + 1
                
        return l
